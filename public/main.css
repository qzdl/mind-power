@import url('https://rsms.me/inter/inter.css');
html { font-family: 'Inter', sans-serif; }
@supports (font-variation-settings: normal) {
  html { font-family: 'Inter var', sans-serif; }
}

* {
    box-sizing: border-box;

  }

#container {
    position: relative;
    z-index: 0;
}

  #root {
    position: relative;
  }
  #editor-container {
    position: absolute;
    top: 1rem
  }
  .editor {
    background: inherit;
    border: none;
    resize: none;
    font-family: inherit;
    display: block;
    padding: 0;
    width: 100%;

  }

  .thing {
    position: absolute;
    min-height: 100px;
    min-width: 100px;
    max-width: 300px;
    overflow-wrap: break-word;
    background: #eee;
    z-index: 1;
    padding: 10px;
    box-shadow: .1rem .1rem .1rem #c7bfa1;

    transition-timing-function: ease-out;
    transition-property: transform, height, box-shadow;
    transition-duration: .1s;

     /* semilattice */
    border-radius: 8px;
    box-shadow: .1rem .1rem .1rem #dcdfe5;


  }

  .dropzone {
    height: 10px;
    transition-property: height;
    transition-timing-function: ease-out;
    transition-duration: .1s;
  }

  .thing .mount {
    position: relative;

    transition-timing-function: ease-out;
    transition-property: height, width;
    transition-duration: 2s;

  }
  .thing .thing, .thing .fauxthing {
    border-left: solid 5px #ddd;
    box-shadow: none !important;
    border-radius: 0;
    position: relative;
    margin-bottom: 10px
  }

html,  .navigation {
    // accent

      background-color: #d0ccbd!important;

      color: #eee;
  }

  .navigation  a {
      color: #444;
  }

  .navigation {
    position: fixed;
    background-color: #d0ccbd !important;
    margin-bottom: 2rem;
  }

  body {
      background-color:  #dcdfe5 !important; // #d0ccbd
// #dcdfe5 from semilattice
      padding-bottom: 2rem;
  }

  .card {
      background-color: #dacea5;

      border: solid 1px #e8e1c8 !important;
      margin: 1rem;
      box-shadow: .1rem .1rem .1rem #c7bfa1;
  }


  .home h2 {
    position: fixed
  }

  .context {
    color: display: flex;
    height: 65px;
    width: 120px;
    position: absolute;

    padding-left: 20px;
    z-index: 9999;
    transition: opacity .2s ease-in;
    opacity: 0
  }

  .context.active {
    opacity: 1
  }

  .context .button {
    border-radius: 50%;
    float: left;
    font-size: 1.7rem;
    margin-right: 20px;
    background: #eee;
    width: 65px;
    height: 65px;
    box-shadow: .05rem .05rem .8rem .2rem #dcdfe5;
    transition: transform .1s;

    padding-top: .99rem;
    font-size: 1.7rem;
    padding-left: .8rem;
  }
  .context .button:hover {
    transform: scale(1.05)
  }

  input {
    width: 100%;
    height: 5rem;
    font-size: 2rem;
    border-radius: 1rem;
    border: none;
    background-color: #cbbc82;
    background-image: url(./textured-paper.png);
    padding: 0 1rem;
  }

  .debug #container, .debug .space, .debug .thing, .debug .context {
    outline: solid red 1px;
  }

  .debug #container {
    overflow: scroll
  }

  /*
    do this based on size of thing
    and aspect ratio of view

    so, generate css class that defines, based on xy & size
    - scaling,
    - xy coord translation

  */
  .zooming {
    z-index: 9999;
    transform-origin: 0 0;
    transform: scaleY(3.7848934099003864) scaleX(4.93)
  }
